version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: scheduling_postgres
    environment:
      POSTGRES_DB: scheduling_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - scheduling_network

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: scheduling_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - scheduling_network

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scheduling_api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/scheduling_app
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - GOOGLE_CLIENT_ID=your-google-client-id
      - GOOGLE_CLIENT_SECRET=your-google-client-secret
      - MICROSOFT_CLIENT_ID=your-microsoft-client-id
      - MICROSOFT_CLIENT_SECRET=your-microsoft-client-secret
      - ZOOM_CLIENT_ID=your-zoom-client-id
      - ZOOM_CLIENT_SECRET=your-zoom-client-secret
      - SENDGRID_API_KEY=your-sendgrid-api-key
      - TWILIO_ACCOUNT_SID=your-twilio-account-sid
      - TWILIO_AUTH_TOKEN=your-twilio-auth-token
      - FRONTEND_URL=http://localhost:3001
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - scheduling_network
    command: npm run start:dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: scheduling_frontend
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_GOOGLE_CLIENT_ID=your-google-client-id
    depends_on:
      - api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - scheduling_network

volumes:
  postgres_data:
  redis_data:

networks:
  scheduling_network:
    driver: bridge
